$breakpoints: (
  xs: '320px',
  s: '400px',
  m: '760px',
  l: '1024px',
  xl: '1200px'
);

// Recieves a breakpoint and generates a media query
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

// Column system for all breakpoints
$cols: 12;
.row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

@each $key, $val in $breakpoints {
  @for $i from 1 through $cols {
    .col-#{$key}-#{$i} {
      flex-basis: (100 / ($cols / $i) ) * 1%;
    }
  }
}

// Grid container
.grid {
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

// Other containers
.root-container {
  padding: 1em;

  @include respond-to('m'){
    padding: 1em 0;
  }
}

.container {
  max-width: unquote(map-get($breakpoints, 'xl'));
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  &__fluid {
    margin: 0;
    max-width: 100%;
  }
}